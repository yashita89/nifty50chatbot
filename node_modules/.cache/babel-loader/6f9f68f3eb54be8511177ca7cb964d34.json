{"ast":null,"code":"var _jsxFileName = \"/Users/yashitakilledar/Stocks/nifty50-ai-chatbot/src/components/StockDataTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockDataTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/data/nifty50-sample.csv');\n        const text = await response.text();\n        const parsedData = parseCSV(text);\n        setData(parsedData);\n      } catch (err) {\n        setError('Failed to fetch stock data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const parseCSV = text => {\n    const rows = text.split('\\n').slice(1);\n    return rows.map(row => {\n      const columns = row.split(',');\n      return {\n        symbol: columns[0],\n        lastPrice: parseFloat(columns[1]),\n        change: parseFloat(columns[2]),\n        percentChange: parseFloat(columns[3]),\n        volume: parseInt(columns[4])\n      };\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Percent Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map(stock => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: stock.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: stock.lastPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: stock.change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: stock.percentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: stock.volume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, stock.symbol, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(StockDataTable, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = StockDataTable;\nexport default StockDataTable;\nvar _c;\n$RefreshReg$(_c, \"StockDataTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","StockDataTable","_s","data","setData","loading","setLoading","error","setError","fetchData","response","fetch","text","parsedData","parseCSV","err","rows","split","slice","map","row","columns","symbol","lastPrice","parseFloat","change","percentChange","volume","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","stock","_c","$RefreshReg$"],"sources":["/Users/yashitakilledar/Stocks/nifty50-ai-chatbot/src/components/StockDataTable.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StockData } from '../types';\n\nconst StockDataTable: React.FC = () => {\n    const [data, setData] = useState<StockData[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch('/data/nifty50-sample.csv');\n                const text = await response.text();\n                const parsedData = parseCSV(text);\n                setData(parsedData);\n            } catch (err) {\n                setError('Failed to fetch stock data');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const parseCSV = (text: string): StockData[] => {\n        const rows = text.split('\\n').slice(1);\n        return rows.map(row => {\n            const columns = row.split(',');\n            return {\n                symbol: columns[0],\n                lastPrice: parseFloat(columns[1]),\n                change: parseFloat(columns[2]),\n                percentChange: parseFloat(columns[3]),\n                volume: parseInt(columns[4]),\n            };\n        });\n    };\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>{error}</div>;\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>Symbol</th>\n                    <th>Last Price</th>\n                    <th>Change</th>\n                    <th>Percent Change</th>\n                    <th>Volume</th>\n                </tr>\n            </thead>\n            <tbody>\n                {data.map(stock => (\n                    <tr key={stock.symbol}>\n                        <td>{stock.symbol}</td>\n                        <td>{stock.lastPrice}</td>\n                        <td>{stock.change}</td>\n                        <td>{stock.percentChange}</td>\n                        <td>{stock.volume}</td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n};\n\nexport default StockDataTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}